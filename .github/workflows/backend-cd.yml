name: Backend CD # release 브랜치로 머지된 코드 자동 배포

on:
  push:
    branches: ["main"] # main 브랜치에 push 될 때만 실행
    paths-ignore:
      - "front/**" # 프론트 파일 변경은 감지 안 함

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 깃허브 레포지토리 코드 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. AWS OIDC로 인증 (추정할 IAM Role과 GitHub 연결)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-northeast-2
          role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/GitHubTokenECSRole

      # 3. ECS Task Family에서 가장 최신 Revision을 조회하고 이미지 버전만 변경하여 새로운 Revision 생성
      - name: Render Task Definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: shortorial-be-task
          container-name: shortorial-be-task
          image: ${{ secrets.DOCKER_REPO }}/shortorial-be:1.0.1

      # 4. 최신 Revision으로 등록 후 서비스 업데이트
      - name: Deploy to Amazon ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: shortorial-be-svc
          cluster: Shortorial
          wait-for-service-stability: true
